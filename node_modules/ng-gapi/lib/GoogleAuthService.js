import { Injectable } from "@angular/core";
import { Observable } from "rxjs/Observable";
import 'rxjs/add/observable/of';
import 'rxjs/add/operator/mergeMap';
import { GoogleApiService } from "./GoogleApiService";
var GoogleAuthService = /** @class */ (function () {
    function GoogleAuthService(googleApi) {
        var _this = this;
        this.googleApi = googleApi;
        this.GoogleAuth = undefined;
        this.googleApi.onLoad().subscribe(function () {
            _this.loadGapiAuth();
        });
    }
    GoogleAuthService.prototype.getAuth = function () {
        var _this = this;
        if (!this.GoogleAuth) {
            return this.googleApi.onLoad().mergeMap(function () { return _this.loadGapiAuth(); });
        }
        return Observable.of(this.GoogleAuth);
    };
    GoogleAuthService.prototype.loadGapiAuth = function () {
        var _this = this;
        return Observable.create(function (observer) {
            gapi.load('auth2', function () {
                gapi.auth2.init(_this.googleApi.getConfig().getClientConfig()).then(function (auth) {
                    _this.GoogleAuth = auth;
                    observer.next(auth);
                    observer.complete();
                });
            });
        });
    };
    GoogleAuthService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    GoogleAuthService.ctorParameters = function () { return [
        { type: GoogleApiService, },
    ]; };
    return GoogleAuthService;
}());
export { GoogleAuthService };
